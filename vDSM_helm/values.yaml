storage:
  nfs:
    server: "10.1.1.2"
    path: "/mnt/user/Talos"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "20Gi"
  storageClassName: "nfs"
  # Mount path that vDSM expects internally
  mountPath: "/storage"

replicaCount: 1

image:
  repository: "vdsm/virtual-dsm"
  tag: "latest"
  pullPolicy: IfNotPresent

service:
  enabled: true
  type: ClusterIP
  port: 8080

# Environment variables for vDSM configuration
env:
  # Device configuration for baseline mode
  KVM: "N"              # Disable KVM acceleration (required for baseline mode)
  USER_PORTS: "Y"        # Enable user-mode networking (fallback when TUN unavailable)
  TUN_DEVICE: "N"        # Disable TUN device (required for baseline mode)

serviceAccount:
  create: true
  name: "vdsm-serviceaccount"

# Security context for vDSM container - TRULY baseline compliant (no device access)
# This will work with baseline Pod Security Standards but with limited functionality
securityContext:
  # No privileged mode for baseline compliance
  privileged: false
  # Only baseline-compliant capabilities
  capabilities:
    add:
    - CHOWN
    - SETGID
    - SETUID
    - DAC_OVERRIDE    # Override discretionary access control
    - FOWNER          # Override file ownership restrictions
    drop:
    - ALL
  # Allow root user since vDSM requires root privileges
  runAsNonRoot: false
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 0

# Alternative security context for Talos compatibility
# This might work better on Talos machines with stricter security policies
# Uncomment this section and comment out the above securityContext if you're still having issues
#
# securityContext:
#   privileged: false
#   capabilities:
#     add:
#     - CHOWN
#     - SETGID
#     - SETUID
#     - DAC_OVERRIDE
#     - FOWNER
#     drop:
#     - ALL
#   runAsNonRoot: false
#   runAsUser: 0
#   runAsGroup: 0
#   fsGroup: 0

# PRIVILEGED security context for full vDSM functionality
# Note: This requires the "privileged" Pod Security Standard
# Uncomment and use this if you need TUN/KVM device access and full performance
#
# securityContext:
#   privileged: true
#   capabilities:
#     add:
#     - NET_ADMIN       # Network administration (for TUN device)
#     - SYS_ADMIN       # System administration (for KVM device)
#     - CHOWN
#     - SETGID
#     - SETUID
#     - DAC_OVERRIDE
#     - FOWNER

# Resource limits and requests
resources:
  requests:
    memory: "2Gi"
    cpu: "1000m"
  limits:
    memory: "8Gi"
    cpu: "4000m"
  
nodeSelector: {}

tolerations: []

affinity: {}
