storage:
  nfs:
    server: "10.1.1.2"
    path: "/mnt/user/Talos"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "16Gi"
  storageClassName: "nfs"
  # Alternative mount path that might have fewer restrictions
  # If you continue to have permission issues, try changing this to:
  # - "/opt/vdsm" (recommended)
  # - "/tmp/vdsm" (for testing)
  # - "/var/lib/vdsm" (alternative)
  mountPath: "/opt/vdsm"

replicaCount: 1

image:
  repository: "vdsm/virtual-dsm"
  tag: "latest"
  pullPolicy: IfNotPresent

service:
  enabled: true
  type: ClusterIP
  port: 8080

serviceAccount:
  create: true
  name: "vdsm-serviceaccount"

# Security context for vDSM container - allows device access for TUN and KVM
securityContext:
  # No privileged mode for baseline compliance
  privileged: false
  # Add capabilities needed for nginx, file operations, DSM installation, and device access
  capabilities:
    add:
    - CHOWN
    - SETGID
    - SETUID
    - DAC_OVERRIDE    # Override discretionary access control
    - FOWNER          # Override file ownership restrictions
    - NET_ADMIN       # Network administration (for TUN device)
    - SYS_ADMIN       # System administration (for KVM device)
    drop:
    - ALL
  # Allow root user since vDSM requires root privileges
  runAsNonRoot: false
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 0

# Alternative security context for Talos compatibility
# This might work better on Talos machines with stricter security policies
# Uncomment this section and comment out the above securityContext if you're still having issues
#
# securityContext:
#   privileged: false
#   capabilities:
#     add:
#     - CHOWN
#     - SETGID
#     - SETUID
#     - DAC_OVERRIDE
#     - FOWNER
#     - NET_ADMIN
#     - SYS_ADMIN
#     drop:
#     - ALL
#   runAsNonRoot: false
#   runAsUser: 0
#   runAsGroup: 0
#   fsGroup: 0

# Alternative security context for users who need additional capabilities
# Note: This requires a more permissive Pod Security Standard (privileged)
# Uncomment and use this instead of the above securityContext if you need:
# - NET_ADMIN for network management
# - SYS_ADMIN for system administration
# - SYS_RAWIO for raw I/O operations
#
# securityContext:
#   privileged: true
#   capabilities:
#     add:
#     - NET_ADMIN
#     - SYS_ADMIN
#     - SYS_RAWIO

# Resource limits and requests
resources:
  requests:
    memory: "2Gi"
    cpu: "1000m"
  limits:
    memory: "8Gi"
    cpu: "4000m"
  
nodeSelector: {}

tolerations: []

affinity: {}
