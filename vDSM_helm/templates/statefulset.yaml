apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "vdsm.fullname" . }}
  labels:
    {{- include "vdsm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "vdsm.fullname" . }}-headless
  selector:
    matchLabels:
      {{- include "vdsm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "vdsm.selectorLabels" . | nindent 8 }}
      annotations:
        # Pod Security Standards compliance
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        apparmor.security.beta.kubernetes.io/pod: runtime/default
    spec:
      # Security context for Pod Security Standards compliance
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.security.runAsUser }}
        runAsGroup: {{ .Values.security.runAsGroup }}
        fsGroup: {{ .Values.security.fsGroup }}
        seccompProfile:
          type: RuntimeDefault
      {{- if eq .Values.storage.type "hostPath" }}
      # Ensure pods are scheduled on nodes with the required host path
      affinity:
        {{- if .Values.affinity }}
        {{- toYaml .Values.affinity | nindent 8 }}
        {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "vdsm.name" . }}
              topologyKey: kubernetes.io/hostname
      {{- else if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.targetPort }}
          name: http
        volumeMounts:
        - name: data
          mountPath: {{ .Values.config.dataDir }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        # Container security context
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
      {{- if eq .Values.storage.type "hostPath" }}
      volumes:
      - name: data
        hostPath:
          path: {{ .Values.storage.hostPath }}
          type: DirectoryOrCreate
      {{- end }}
  {{- if ne .Values.storage.type "hostPath" }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.storage.storageClass }}
      resources:
        requests:
          storage: {{ .Values.storage.size }}
  {{- end }}
