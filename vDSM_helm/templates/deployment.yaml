apiVersion: apps/v1
kind: Deployment
metadata:
  name: vdsm
  labels:
    app: vdsm
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: vdsm
  template:
    metadata:
      labels:
        app: vdsm
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      initContainers:
      - name: init-storage-permissions
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          # Create a subdirectory for vDSM with proper permissions
          echo "Setting up vDSM storage directory..."
          mkdir -p {{ .Values.storage.mountPath }}
          # Try to set permissions, but don't fail if we can't
          chown -R 0:0 {{ .Values.storage.mountPath }} || echo "Could not change ownership (NFS restriction)"
          chmod -R 777 {{ .Values.storage.mountPath }} || echo "Could not change permissions (NFS restriction)"
          # Create necessary subdirectories
          mkdir -p {{ .Values.storage.mountPath }}/{data,logs,cache}
          echo "Storage setup completed"
          ls -la {{ .Values.storage.mountPath }}/
        volumeMounts:
        - name: vdsm-storage
          mountPath: {{ .Values.storage.mountPath }}
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      - name: init-nginx-permissions
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          # Create nginx directories
          mkdir -p /var/lib/nginx/body /var/lib/nginx/fastcgi /var/lib/nginx/proxy /var/lib/nginx/scgi /var/lib/nginx/uwsgi /var/log/nginx /var/cache/nginx
          # Create log files
          touch /var/log/nginx/error.log /var/log/nginx/access.log
          # Make everything world-writable for maximum compatibility
          chmod -R 777 /var/lib/nginx /var/log/nginx /var/cache/nginx
          # Debug output
          echo "=== Directory listing ==="
          ls -la /var/log/nginx/
          echo "=== Ownership ==="
          id
          echo "=== Current working directory ==="
          pwd
          echo "=== Permissions ==="
          ls -la /var/log/nginx/
        volumeMounts:
        - name: nginx-data
          mountPath: /var/lib/nginx
        - name: nginx-logs
          mountPath: /var/log/nginx
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
      - name: vdsm
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 8080
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        volumeMounts:
        - name: vdsm-storage
          mountPath: {{ .Values.storage.mountPath }}
        - name: nginx-data
          mountPath: /var/lib/nginx
        - name: nginx-logs
          mountPath: /var/log/nginx
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
        resources:
          {{- toYaml .Values.resources | nindent 8 }}
      volumes:
      - name: vdsm-storage
        persistentVolumeClaim:
          claimName: vdsm-pvc
      - name: nginx-data
        tmpfs:
          sizeLimit: 100Mi
      - name: nginx-logs
        tmpfs:
          sizeLimit: 100Mi
      - name: nginx-cache
        tmpfs:
          sizeLimit: 100Mi
      - name: tmp
        emptyDir: {}
      - name: var-tmp
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
